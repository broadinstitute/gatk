sudo: required
dist: trusty
jdk:
- oraclejdk8
env:
  matrix:
  - CLOUD=mandatory
  - CLOUD=false
  global:
  - JAVA_LIBRARY_PATH=/usr/lib/jni

  #needed to avoid a bug in the hdf5 installer
  - PS1=">"

  #limit gradle jvm memory usage
  - GRADLE_OPTS=-Xmx512m

  # If this changes, you will need to update the gradle build
  - HDF5_DIR=/hdf/

  #gradle needs this
  - TERM=dumb
  #limit gradle jvm memory
  - GRADLE_OPTS=-Xmx1024m
  #google cloud stuff
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1
  - GCLOUD=$HOME/gcloud/google-cloud-sdk/bin 
  - CLOUDSDK_PYTHON_SITEPACKAGES=1 
  - GOOGLE_APPLICATION_CREDENTIALS=$TRAVIS_BUILD_DIR/servicekey.json
  #directories for building Apache2-BWA
  - OLD_DIR=$(pwd)
  - BWA_DIR=$HOME/bwaApache2
  - BWA_REPO=https://github.com/lh3/bwa.git
  - PATHTOBWA=$BWA_DIR/bwa
  #hellbender specific variables
  - HELLBENDER_TEST_INPUTS=gs://hellbender/test/resources/
  - HELLBENDER_TEST_STAGING=gs://hellbender/test/staging/
  - HELLBENDER_TEST_PROJECT=broad-dsde-dev
  #coveralls repo token
  - secure: RA4LKD82cW+0xPayPVAWSpYqJu5uoPcz7oXXYtYNVuilFmS8PGYx0g/BXs4QMvQsGMt6aMLN8m7lMAPN5XTH/8JSeM3VmQ3mdpgNdP+p3CVlwrapZ2lTq27Wb/E8J1CGEHOg76z716t//FUElyC/gdhS+tfBmXk3YanM5fMXEHs=
  #google API key
  - secure: "eHyDxfcfv6pSIkoqQ9PimiYu9I6vmXJOpY/OkXLkc7ZAUfNTfRVytUGG9Xf/bKKF+Wscm5pIfZJ/TMDG6E3Uyngs9nVK/29QWevcEaLDJy8OdI9OgPZb13hlbM2jbVv5AVBGYcbcNBrTvrTs0MOMOFPEJqZ99xWIj5bzZ/AsIfU="
  #for uploading artifacts
  - ARTIFACTORY_USERNAME=gatkci
  #artifactory password
  - secure: "E0LWXgX3aWSE/DWHXXDx4vrAq4uX6vKg402wToaZ5otbHQ/UP0H7/FA5jomavAXoC46oMVHZcEltZ5OVhuJ0NW8yYxUCecJ1D/YvVQmnfFABcV/qLM+k4e2rYQOKVw/pejB2gG8XdTA+XE2WyTeENbmIkputS8f1ndKWCmZxuuk="
matrix:
  fast_finish: true
  allow_failures:
    - env: CLOUD=todo
before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/gcloud/
before_install:
# Grab the HDF5 2.9 (64-bit) binary and install it.
#  shared libs are in /hdf5/HDFView/lib/linux/
#  jars are in /hdf5/HDFView/lib/
# symlinks are made to the JAVA_LIBRARY_PATH
- sudo mkdir -p ${HDF5_DIR}
- echo HDF5 being downloaded and installed in ${HDF5_DIR}
- sudo wget "https://www.hdfgroup.org/ftp/HDF5/releases/HDF-JAVA/hdf-java-2.9/hdfview/hdfview_install_linux64.bin" -O ${HDF5_DIR}/hdfview_install_linux64.bin
- sudo chmod +x ${HDF5_DIR}/hdfview_install_linux64.bin
- sudo ${HDF5_DIR}/hdfview_install_linux64.bin
- sudo mkdir -p ${JAVA_LIBRARY_PATH}
- sudo ln -s ${HDF5_DIR}/HDFView/lib/linux/libjhdf5.so ${JAVA_LIBRARY_PATH}/libjhdf5.so
- sudo ln -s ${HDF5_DIR}/HDFView/lib/linux/libjhdf5.settings ${JAVA_LIBRARY_PATH}/libjhdf5.settings
- sudo chmod -R a+rx ${JAVA_LIBRARY_PATH}
- sudo chmod -R a+rx ${HDF5_DIR}
- ls -la ${HDF5_DIR}/HDFView/lib
- ls -la ${HDF5_DIR}/HDFView/lib/linux
- ls -la ${JAVA_LIBRARY_PATH}

#setup google stuff
- if [ $TRAVIS_SECURE_ENV_VARS == true ]; then
    openssl aes-256-cbc -K $encrypted_29f3b7c4d8c3_key -iv $encrypted_29f3b7c4d8c3_iv  -in resources_for_CI/servicekey.json.enc -out servicekey.json -d;
    scripts/install_gcloud.sh;
    printf 'y\n' | $GCLOUD/gcloud components update app;
    $GCLOUD/gcloud config set project broad-dsde-dev;
    $GCLOUD/gcloud auth activate-service-account --key servicekey.json;
  fi
#install R
- sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
- sudo add-apt-repository "deb http://cran.rstudio.com/bin/linux/ubuntu trusty/"
- sudo apt-get update
- sudo apt-get install -y --force-yes r-base
- R --version
#install gcc
- sudo apt-get install -y --force-yes  gcc
- gcc --version
#install Apache-2 BWA
- sudo mkdir $BWA_DIR
- sudo git clone $BWA_REPO -b Apache2 --single-branch $BWA_DIR
- cd $BWA_DIR && sudo make
- cd $OLD_DIR
install:
- if [[ $TRAVIS_SECURE_ENV_VARS == false && $CLOUD == mandatory ]]; then
    echo "Can't run cloud tests without keys so don't bother building";
  else
    ./gradlew assemble;
    ./gradlew installDist;
  fi
script:
#basic sanity test to check that gatk-launch actually runs something
- ./gatk-launch PrintReads -I src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O output.bam
#run tests
#install git-lfs
- if [[ $TRAVIS_SECURE_ENV_VARS == false && $CLOUD == mandatory ]]; then
    echo "Can't run cloud tests without keys so don't run tests";
  else
    bash scripts/install_git_lfs.sh;
    travis_wait 30 ./gradlew jacocoTestReport;
  fi
after_success:
- if [[ $TRAVIS_SECURE_ENV_VARS == false && $CLOUD == mandatory ]]; then
    echo "Can't run cloud tests without keys so don't try to record coverage tests";
  else
   ./gradlew coveralls;
  fi
- if [[ $TRAVIS_BRANCH == master && $CLOUD == false ]]; then ./gradlew uploadArchives; fi
after_failure:
- dmesg | tail -100
after_script:
- if [ $TRAVIS_SECURE_ENV_VARS == true ]; then
    $GCLOUD/gcloud components -q update gsutil;
    REPORT_PATH=$TRAVIS_BRANCH_$TRAVIS_JOB_NUMBER;
    $GCLOUD/gsutil -m cp -z html -z js -z xml -z css -r build/reports/tests gs://hellbender/test/build_reports/$REPORT_PATH/;
    echo "See the test report at https://storage.googleapis.com/hellbender/test/build_reports/$REPORT_PATH/tests/index.html";
  fi
