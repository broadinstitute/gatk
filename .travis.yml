language: java
sudo: required
dist: trusty
git:
  depth: 9999999
jdk:
- oraclejdk8
env:
  matrix:
  - CLOUD=mandatory
  - CLOUD=false
  global:
  #for genomics db
  - LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/dependencies/libcsv/.libs
  #gradle needs this
  - TERM=dumb
  #limit gradle jvm memory and disable daemon
  - GRADLE_OPTS="-Xmx1024m -Dorg.gradle.daemon=false"
  #google cloud stuff
  - CLOUDSDK_CORE_DISABLE_PROMPTS=1
  - GCLOUD=$HOME/gcloud/google-cloud-sdk/bin 
  - CLOUDSDK_PYTHON_SITEPACKAGES=1 
  - GOOGLE_APPLICATION_CREDENTIALS=$TRAVIS_BUILD_DIR/servicekey.json
  #Path to GenomicsDB binaries
  - GATK_GENOMICSDB_BIN=src/test/resources/large/tiledb_bin
  #hellbender specific variables
  - HELLBENDER_TEST_INPUTS=gs://hellbender/test/resources/
  - HELLBENDER_TEST_STAGING=gs://hellbender/test/staging/
  - HELLBENDER_TEST_PROJECT=broad-dsde-dev
  - HELLBENDER_JSON_SERVICE_ACCOUNT_KEY=servicekey.json
  #google API key
  - secure: "eHyDxfcfv6pSIkoqQ9PimiYu9I6vmXJOpY/OkXLkc7ZAUfNTfRVytUGG9Xf/bKKF+Wscm5pIfZJ/TMDG6E3Uyngs9nVK/29QWevcEaLDJy8OdI9OgPZb13hlbM2jbVv5AVBGYcbcNBrTvrTs0MOMOFPEJqZ99xWIj5bzZ/AsIfU="
  #for uploading artifacts
  - ARTIFACTORY_USERNAME=gatkci
  #artifactory password
  - secure: "E0LWXgX3aWSE/DWHXXDx4vrAq4uX6vKg402wToaZ5otbHQ/UP0H7/FA5jomavAXoC46oMVHZcEltZ5OVhuJ0NW8yYxUCecJ1D/YvVQmnfFABcV/qLM+k4e2rYQOKVw/pejB2gG8XdTA+XE2WyTeENbmIkputS8f1ndKWCmZxuuk="
matrix:
  fast_finish: true
  allow_failures:
    - env: CLOUD=todo
before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/gcloud/
before_install:
#setup google stuff
- if [ $TRAVIS_SECURE_ENV_VARS == true ]; then
    openssl aes-256-cbc -K $encrypted_29f3b7c4d8c3_key -iv $encrypted_29f3b7c4d8c3_iv  -in resources_for_CI/servicekey.json.enc -out servicekey.json -d;
    scripts/install_gcloud.sh;
    printf 'y\n' | $GCLOUD/gcloud components update app;
    $GCLOUD/gcloud config set project broad-dsde-dev;
    $GCLOUD/gcloud auth activate-service-account --key-file servicekey.json;
  fi
#install R
- sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
- sudo add-apt-repository "deb http://cran.rstudio.com/bin/linux/ubuntu trusty/"
- sudo apt-get update
- sudo apt-get install -y --force-yes r-base
- R --version
###### necessary for running the dynamically linked GenomicsDB binaries in src/test/resources/large
#Install lcov and MPICH
- sudo apt-get -y install lcov mpich zlib1g-dev libssl-dev
- sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
- sudo apt-get update -q
- sudo apt-get install g++-4.9 -y
- sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 60
#Install libcsv
- cd $TRAVIS_BUILD_DIR
- mkdir dependencies
- wget -O dependencies/libcsv.tar.gz http://downloads.sourceforge.net/project/libcsv/libcsv/libcsv-3.0.3/libcsv-3.0.3.tar.gz
- mkdir -p dependencies/libcsv && tar xzf dependencies/libcsv.tar.gz  -C dependencies/libcsv --strip-components=1 && cd dependencies/libcsv && ./configure && make
- cd $TRAVIS_BUILD_DIR
###### end GenomicsDB stuff
install:
- if [[ $TRAVIS_SECURE_ENV_VARS == false && $CLOUD == mandatory ]]; then
    echo "Can't run cloud tests without keys so don't bother building";
  else
    ./gradlew assemble;
    ./gradlew installDist;
  fi
script:
#basic sanity test to check that gatk-launch actually runs something
- ./gatk-launch PrintReads -I src/test/resources/NA12878.chr17_69k_70k.dictFix.bam -O output.bam
#run tests
#install git-lfs
- if [[ $TRAVIS_SECURE_ENV_VARS == false && $CLOUD == mandatory ]]; then
    echo "Can't run cloud tests without keys so don't run tests";
  else
    bash scripts/install_git_lfs.sh;
    travis_wait 30 ./gradlew jacocoTestReport;
  fi
after_success:
- bash <(curl -s https://codecov.io/bash)
- if [[ $TRAVIS_BRANCH == master && $CLOUD == false ]]; then ./gradlew uploadArchives; fi
after_failure:
- dmesg | tail -100
after_script:
- if [ $TRAVIS_SECURE_ENV_VARS == true ]; then
    $GCLOUD/gcloud components -q update gsutil;
    REPORT_PATH=$TRAVIS_BRANCH_$TRAVIS_JOB_NUMBER;
    $GCLOUD/gsutil -m cp -z html -z js -z xml -z css -r build/reports/tests gs://hellbender/test/build_reports/$REPORT_PATH/;
    echo "See the test report at https://storage.googleapis.com/hellbender/test/build_reports/$REPORT_PATH/tests/test/index.html";
  fi
