package org.broadinstitute.hellbender.tools.copynumber.formats.records;

import htsjdk.samtools.util.Locatable;
import org.broadinstitute.hellbender.tools.copynumber.GermlineCNVCaller;
import org.broadinstitute.hellbender.utils.SimpleInterval;
import org.broadinstitute.hellbender.utils.Utils;

import java.util.Objects;

/**
 * Represents a value of copy ratio in linear space generated by {@link GermlineCNVCaller} with the corresponding interval.
 *
 * @author Andrey Smirnov &lt;asmirnov@broadinstitute.org&gt;
 */
public class LinearCopyRatio implements Locatable {
    private final SimpleInterval interval;
    private final double linearCopyRatio;

    public LinearCopyRatio(final SimpleInterval interval, final double linearCopyRatio) {
        this.interval = Utils.nonNull(interval, "The interval must be non-null.");
        this.linearCopyRatio = linearCopyRatio;
    }

    @Override
    public String getContig() {
        return interval.getContig();
    }

    @Override
    public int getStart() {
        return interval.getStart();
    }

    @Override
    public int getEnd() {
        return interval.getEnd();
    }

    public SimpleInterval getInterval() {
        return interval;
    }

    public double getLinearCopyRatio() {
        return linearCopyRatio;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        final LinearCopyRatio that = (LinearCopyRatio) o;
        return Double.compare(that.linearCopyRatio, linearCopyRatio) == 0 &&
                interval.equals(that.interval);
    }

    @Override
    public int hashCode() {
        return Objects.hash(interval, linearCopyRatio);
    }
}
