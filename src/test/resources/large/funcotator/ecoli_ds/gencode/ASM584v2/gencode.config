name = Gencode
version = ASM584v2
src_file = Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.44.gtf
origin_location = ftp://ftp.ensemblgenomes.org/pub/bacteria/release-44/gtf/bacteria_0_collection/escherichia_coli_str_k_12_substr_mg1655/Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.44.gtf.gz 
preprocessing_script = getGencode.sh , fixGencodeOrdering.py

# Whether this data source is for the b37 reference.
# Required and defaults to false.
isB37DataSource = false

# Supported types:
# simpleXSV    -- Arbitrary separated value table (e.g. CSV), keyed off Gene Name OR Transcript ID
# locatableXSV -- Arbitrary separated value table (e.g. CSV), keyed off a genome location
# gencode      -- Custom datasource class for GENCODE
# cosmic       -- Custom datasource class for COSMIC
# vcf          -- Custom datasource class for Variant Call Format (VCF) files
type = gencode

# Required field for GENCODE files.
# Path to the FASTA file from which to load the sequences for GENCODE transcripts:
gencode_fasta_path = Escherichia_coli_str_k_12_substr_mg1655.ASM584v2.cds.all.fa

# Required field for GENCODE files.
# NCBI build version (either hg19 or hg38):
ncbi_build_version = ASM584v2 

# Required field for simpleXSV files.
# Valid values:
#     GENE_NAME
#     TRANSCRIPT_ID
xsv_key =

# Required field for simpleXSV files.
# The 0-based index of the column containing the key on which to match
xsv_key_column =

# Required field for simpleXSV AND locatableXSV files.
# The delimiter by which to split the XSV file into columns.
xsv_delimiter =

# Required field for simpleXSV files.
# Whether to permissively match the number of columns in the header and data rows
# Valid values:
#     true
#     false
xsv_permissive_cols =

# Required field for locatableXSV files.
# The 0-based index of the column containing the contig for each row
contig_column =

# Required field for locatableXSV files.
# The 0-based index of the column containing the start position for each row
start_column =

# Required field for locatableXSV files.
# The 0-based index of the column containing the end position for each row
end_column =

